(clojure.string/length "ATGCTTCAGAAAGGTCTTACG")
(require 'clojure.string)
(clojure.string/length "ATGCTTCAGAAAGGTCTTACG")
(length "ATGCTTCAGAAAGGTCTTACG")
(doc len)
(doc leng)
(doc length)
(doc clojure.string)
(find-doc string)
(find-doc "string")
(doc size)
(doc length)
(type ATGCTTCAGAAAGGTCTTACG)
(type "ATGCTTCAGAAAGGTCTTACG")
(doc type)
(find-doc type)
(find-doc "type")
(count ATGCTTCAGAAAGGTCTTACG)
(count "ATGCTTCAGAAAGGTCTTACG")
(str/split "A" "ATGCTTCAGAAAGGTCTTACG")
(clojure.string/split "A" "ATGCTTCAGAAAGGTCTTACG")
(use 'nucleotide-count :reload)
(nucleotide-counts)
(nucleotide-counts \A)
(use 'nucleotide-count :reload)
(nucleotide-counts \A)
(use 'nucleotide-count :reload)
(= \A A)
(= \A "A")
(type \A)
(type "A")
(def data [] "AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGC")
(def data [] ("AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGC"))
(def data [] "AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGC")
(defn data [] "AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGC")
(data)
(chars (data))
(chars data)
data
(data)
(chars (data))
(chars "AB")
(seq (chars (char-array "AB")))
(seq (chars (char-array "ABCD")))
(char-array "ABCD")
(char-array "XYZ")
(seq (chars (char-array "TUVWX")))
(seq (chars (char-array "")))
(seq (chars (char-array "ACGT")))
(defn dna-alphabet [] ('(\A \C \G \T)))
(dna-alphabet)
(println dna-alphabet)
(println (dna-alphabet))
(println (str dna-alphabet))
(println (str (dna-alphabet)))
(println (dna-alphabet))
(dna-alphabet)
(defn dna-alphabet [] (('(\A \C \G \T))))
(dna-alphabet)
(defn dna-alphabet [] ('(\A \C \G \T)))
(dna-alphabet)
(type dna-alphabet)
(defn dna-alphabet [] (list \A \C \G \T))
(dna-alphabet)
(first dna-alphabet)
(first (dna-alphabet))
(contains? (first (dna-alphabet)) "BCT")
(doc contains?)
(contains? "BCT" (first (dna-alphabet)))
(doc throw)
(exit)
(set  ({A 20} {C 12} {G 17} {T 21})
)
(set  '({A 20} {C 12} {G 17} {T 21}))
(type  ({A 20} {C 12} {G 17} {T 21}))
(type  ({\A 20} {\C 12} {\G 17} {\T 21}))
({\A 20} {\C 12} {\G 17} {\T 21})
zero? 
(exit)
